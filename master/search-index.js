var searchIndex = JSON.parse('{\
"web_push":{"doc":"Web PushA library for creating and sending push …","i":[[3,"WebPushClient","web_push","An async client for sending the notification payload.",null,null],[4,"WebPushError","","",null,null],[13,"Unspecified","","An unknown error happened encrypting the message,",0,null],[13,"Unauthorized","","Please provide valid credentials to send the notification",0,null],[13,"BadRequest","","Request was badly formed",0,null],[13,"ServerError","","Contains an optional <code>Duration</code>, until the user can retry …",0,null],[13,"NotImplemented","","The feature is not implemented yet",0,null],[13,"InvalidUri","","The provided URI is invalid",0,null],[13,"EndpointNotValid","","The URL specified is no longer valid and should no longer …",0,null],[13,"EndpointNotFound","","The URL specified is invalid and should not be used again",0,null],[13,"PayloadTooLarge","","Maximum allowed payload size is 3800 characters",0,null],[13,"TlsError","","Could not initialize a TLS connection",0,null],[13,"SslError","","Error in SSL signing",0,null],[13,"IoError","","Error in reading a file",0,null],[13,"InvalidPackageName","","Make sure the message was addressed to a registration …",0,null],[13,"InvalidTtl","","The TTL value provided was not valid or was not provided",0,null],[13,"MissingCryptoKeys","","The request was missing required crypto keys",0,null],[13,"InvalidCryptoKeys","","One or more of the crypto key elements are invalid.",0,null],[13,"InvalidResponse","","Corrupted response data",0,null],[13,"Other","","",0,null],[3,"SubscriptionInfo","","Client info for sending the notification. Maps the values …",null,null],[12,"endpoint","","The endpoint URI for sending the notification.",1,null],[12,"keys","","The encryption key and secret for payload encryption.",1,null],[3,"SubscriptionKeys","","Encryption keys from the client.",null,null],[12,"p256dh","","The public key",2,null],[12,"auth","","Authentication secret",2,null],[3,"WebPushMessage","","Everything needed to send a push notification to the user.",null,null],[12,"gcm_key","","When not using VAPID, certain browsers need a Firebase …",3,null],[12,"endpoint","","The endpoint URI where to send the payload.",3,null],[12,"ttl","","Time to live, how long the message should wait in the …",3,null],[12,"payload","","The encrypted request payload, if sending any data.",3,null],[12,"service","","The service type where to connect. Firebase when not …",3,null],[3,"WebPushMessageBuilder","","The main class for creating a notification payload.",null,null],[3,"WebPushPayload","","The push content payload, already in an encrypted form.",null,null],[12,"content","","Encrypted content data.",4,null],[12,"crypto_headers","","Headers depending on the authorization scheme and …",4,null],[12,"content_encoding","","The encryption standard.",4,null],[4,"ContentEncoding","","",null,null],[13,"AesGcm","","",5,null],[13,"Aes128Gcm","","",5,null],[3,"VapidSignature","","A struct representing a VAPID signature. Should be …",null,null],[12,"auth_t","","The signature",6,null],[12,"auth_k","","The public key",6,null],[3,"VapidSignatureBuilder","","A VAPID signature builder for generating an optional …",null,null],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[["jsonerror",3]],["webpusherror",4]]],[11,"from","","",0,[[["fromutf8error",3]],["webpusherror",4]]],[11,"from","","",0,[[["invaliduri",3]],["webpusherror",4]]],[11,"from","","",0,[[["unspecified",3]],["webpusherror",4]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]],["webpusherror",4]]],[11,"from","","",0,[[["ioerror",3]],["webpusherror",4]]],[11,"from","","",0,[[["errorstack",3]],["webpusherror",4]]],[11,"from","","",0,[[["decodeerror",4]],["webpusherror",4]]],[11,"eq","","",0,[[["webpusherror",4]]]],[11,"ne","","",0,[[["webpusherror",4]]]],[11,"eq","","",4,[[["webpushpayload",3]]]],[11,"ne","","",4,[[["webpushpayload",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["error",8],["option",4]]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"new","","",7,[[],["webpushclient",3]]],[11,"send","","Sends a notification. Never times out.",7,[[["webpushmessage",3]]]],[11,"short_description","","",0,[[]]],[11,"new","","A constructor function to create a new <code>SubscriptionInfo</code>, …",1,[[],["subscriptioninfo",3]]],[11,"new","","Creates a builder for generating the web push payload.",8,[[["subscriptioninfo",3]],[["result",4],["webpusherror",4],["webpushmessagebuilder",3]]]],[11,"set_ttl","","How long the server should keep the message if it cannot …",8,[[]]],[11,"set_gcm_key","","For Google\'s push service, one must provide an API key …",8,[[]]],[11,"set_vapid_signature","","Add a VAPID signature to the request. To be generated …",8,[[["vapidsignature",3]]]],[11,"set_payload","","If set, the client will get content in the notification. …",8,[[["contentencoding",4]]]],[11,"build","","Builds and if set, encrypts the payload. Any errors will …",8,[[],[["webpusherror",4],["webpushmessage",3],["result",4]]]],[11,"from_pem","","Creates a new builder from a PEM formatted private key.",9,[[["read",8],["subscriptioninfo",3]],[["result",4],["vapidsignaturebuilder",3],["webpusherror",4]]]],[11,"from_der","","Creates a new builder from a DER formatted private key.",9,[[["read",8],["subscriptioninfo",3]],[["result",4],["vapidsignaturebuilder",3],["webpusherror",4]]]],[11,"add_claim","","Add a claim to the signature. Claims <code>aud</code> and <code>exp</code> are …",9,[[]]],[11,"build","","Builds a signature to be used in WebPushMessageBuilder.",9,[[],[["webpusherror",4],["result",4],["vapidsignature",3]]]]],"p":[[4,"WebPushError"],[3,"SubscriptionInfo"],[3,"SubscriptionKeys"],[3,"WebPushMessage"],[3,"WebPushPayload"],[4,"ContentEncoding"],[3,"VapidSignature"],[3,"WebPushClient"],[3,"WebPushMessageBuilder"],[3,"VapidSignatureBuilder"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);